<<<<<<< 90df4c86e7db3830090d67f5558e5489e409f969
- name: wait for Jenkins
  include: ensure_up.yml
=======
- name: wait for Jenkins to start up
  become: false
  wait_for:
    port: "{{ https_enabled | ternary(443, 80) }}"
    state: started
    delay: 15

- name: download Jenkins CLI file
  until: "'response' not in result or result.response.find('Error 503') == -1"
  register: result
  retries: 4
  delay: 15
  get_url:
    url: "{{ https_enabled | ternary('https', 'http') }}:\
      //localhost/jnlpJars/jenkins-cli.jar"
    dest: "{{ ansible_user_dir }}"
    force: true
    validate_certs: false
>>>>>>> Add YAMLLint to checks

- name: copy in configure script
  template:
    src: groovy_set_jenkins_cfg.java
    dest: "{{ ansible_user_dir }}"
  register: groovy_script

- name: run Jenkins global config
  jenkins_script:
    url: "{{ _jenkins_url }}"
    script: "{{ item }}"
    validate_certs: false
  when: groovy_script.changed
  notify: restart Jenkins
  register: global_config
  retries: 10
  until: "'HTTP error 503' not in '{{ global_config.msg | default('') }}'"
  delay: 10
  with_file:
    - "{{ role_path }}/templates/groovy_set_jenkins_cfg.java"
  tags:
    - skip_ansible_lint

- name: run update center configure script
  jenkins_update_center:
    update_center_id: "{{ item.id }}"
    update_center_url: "{{ item.url }}"
  with_items: "{{ update_centers }}"
  notify: restart Jenkins
  become_user: jenkins
  become: true

- name: create cert path
  file:
    dest: "{{ jenkins_home }}/update-center-rootCAs"
    state: directory
    owner: jenkins
    group: jenkins

- name: copy cert file
  copy:
    src: "{{ update_center_certificate }}"
    dest: "{{ jenkins_home }}/update-center-rootCAs/update-center.crt"
    owner: jenkins
    group: jenkins
  notify: restart Jenkins
  when: update_center_certificate is defined

- name: force handlers
  meta: flush_handlers

- name: wait for jenkins master
  include: ensure_up.yml

- name: perform plugin install
  jenkins_plugin:
    url: "{{ _jenkins_url }}"
    name: "{{ item.split('=')[0] }}"
    state: present
    version: "{{ item.split('=')[2] | default(omit) }}"
  register: plugin_install
  retries: 3
  until: not plugin_install|failed
  with_items: "{{ jenkins_plugins }}"

- name: flush handlers
  meta: flush_handlers
