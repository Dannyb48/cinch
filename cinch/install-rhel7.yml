# This playbook is intended to allow installation of 'cinch' into a virtualenv
# on RHEL7, and the primary purpose for its existence is the fact that the
# various python packaging tools (pip, virtualenv, setuptools, etc) are too old
# on RHEL7 to work with newer Python libraries such as those required by
# 'cinch'.
#
# This playbook was tested with Ansible 1.8.4.

- name: install cinch into a virtualenv on RHEL7
  connection: local
  vars:
    jenkins_home: /var/lib/jenkins
    venv_dir: "{{ jenkins_home }}/opt/cinch"
    temp_dir: "{{ venv_dir }}/tmp"
    python: "{{ venv_dir }}/bin/python"
    delete_venv: False

  tasks:
  - name: fail if we are not running this playbook on RHEL7
    fail:
      msg: "this playbook may only be run on RHEL7"
    when: ansible_os_family != "RedHat" or ansible_distribution_major_version != "7"

  - name: ensure we are running as the jenkins user
    fail:
      msg: "this playbook must run as the 'jenkins' user"
    when: ansible_user_id != "jenkins"

  - name: check for /var/lib/jenkins directory
    stat:
      path: "{{ jenkins_home }}"
    register: jenkins_home_stat_result

  - name: fail if /var/lib/jenkins does not exist
    fail:
      msg: "directory {{ jenkins_home }} must exist for this playbook to run"
    when: not jenkins_home_stat_result.stat.exists

  - name: check for /var/lib/jenkins/opt/cinch directory
    stat:
      path: "{{ venv_dir }}"
    register: venv_stat_result

  - name: >-
      fail if pre-existing cinch installation at
      /var/lib/jenkins/opt/cinch is found and it cannot be deleted
    fail:
      msg: "directory {{ venv_dir }} exists, but 'delete_venv' setting is False"
    when: venv_stat_result.stat.exists and not (delete_venv|bool)

  - name: >-
      delete existing virtualenv directory (disabled by default, override
      with DELETE_VENV Jenkins job parameter or delete_venv playbook variable)
    file:
      path: "{{ venv_dir }}"
      state: absent
    when: (delete_venv|bool)

  - name: create virtualenv
    command: virtualenv --no-setuptools "{{ venv_dir }}"
    args:
      creates: "{{ venv_dir }}"

  - name: create temp dir in root of virtualenv
    file:
      path: "{{ temp_dir }}"
      state: directory

  - name: download latest version of pip (version included with RHEL7 is too old)
    get_url:
      url: https://bootstrap.pypa.io/get-pip.py
      dest: "{{ temp_dir }}"

  - name: install pip manually by running get-pip.py script
    command: "{{ python }} {{ temp_dir }}/get-pip.py"

  - name: install cinch using pip
    pip:
      name: cinch
      virtualenv: "{{ venv_dir }}"
      extra_args: -U

  # This pip install should be non-editable, but the pip module in Ansible
  # 1.8.4. does not support that flag
  - name: install linch-pin from master branch instead of latest release from pypi
    command: "{{ python }} {{ venv_dir }}/bin/pip install -U git+https://github.com/CentOS-PaaS-SIG/linch-pin.git@master"
    when: (linchpin_master|bool)

  - name: install python-krbV with pip to use kerberos with Beaker
    pip:
      name: python-krbV
      virtualenv: "{{ venv_dir }}"
      extra_args: -U
    when: (beaker_kerberos|bool)

  ## https://dmsimard.com/2016/01/08/selinux-python-virtualenv-chroot-and-ansible-dont-play-nice/
  - name: >-
      set up symlink in virtualenv for selinux module in system site-packages
      since it's not pip installable
    file:
      src: /usr/lib64/python2.7/site-packages/selinux
      dest: "{{ venv_dir }}/lib/python2.7/site-packages/selinux"
      state: link

  # work-around for https://github.com/CentOS-PaaS-SIG/linch-pin/issues/124
  - name: generate linch-pin config file
    command: "{{ python }} {{ venv_dir }}/bin/linchpin config --reset"
    args:
      chdir: "{{ temp_dir }}"

  # work-around for https://github.com/CentOS-PaaS-SIG/linch-pin/issues/124
  - name: copy linch-pin config file to search path
    copy:
      src: "{{ temp_dir }}/linchpin_config.yml"
      dest: "{{ venv_dir }}/lib/python2.7/site-packages/linchpin_config.yml"
